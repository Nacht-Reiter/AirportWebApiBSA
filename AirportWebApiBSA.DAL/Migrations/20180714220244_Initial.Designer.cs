// <auto-generated />
using AirportWebApiBSA.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AirportWebApiBSA.DAL.Migrations
{
    [DbContext(typeof(AirportContext))]
    [Migration("20180714220244_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AirportWebApiBSA.DAL.Models.AirCraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<TimeSpan>("Age");

                    b.Property<int?>("AirCraftTypeId");

                    b.Property<DateTime>("Manufactured");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AirCraftTypeId");

                    b.ToTable("AirCrafts");
                });

            modelBuilder.Entity("AirportWebApiBSA.DAL.Models.AirCraftType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("CargoCapacity");

                    b.Property<string>("Model");

                    b.Property<int>("PassengersCapacity");

                    b.HasKey("Id");

                    b.ToTable("AirCraftTypes");
                });

            modelBuilder.Entity("AirportWebApiBSA.DAL.Models.Crew", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("PilotId");

                    b.HasKey("Id");

                    b.HasIndex("PilotId");

                    b.ToTable("Crews");
                });

            modelBuilder.Entity("AirportWebApiBSA.DAL.Models.Departure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AirCraftId");

                    b.Property<int?>("CrewId");

                    b.Property<DateTime>("DepartureDate");

                    b.Property<int>("FlightNumber");

                    b.HasKey("Id");

                    b.HasIndex("AirCraftId");

                    b.HasIndex("CrewId");

                    b.ToTable("Departures");
                });

            modelBuilder.Entity("AirportWebApiBSA.DAL.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ArrivalTime");

                    b.Property<DateTime>("DepartureTime");

                    b.Property<string>("Destination");

                    b.Property<string>("EntryPoint");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("AirportWebApiBSA.DAL.Models.Pilot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<TimeSpan>("Expirience");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("AirportWebApiBSA.DAL.Models.Stewardess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<int?>("CrewId");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.HasIndex("CrewId");

                    b.ToTable("Stewardesses");
                });

            modelBuilder.Entity("AirportWebApiBSA.DAL.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FlightId");

                    b.Property<int>("FlightNumber");

                    b.Property<int>("Price");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("AirportWebApiBSA.DAL.Models.AirCraft", b =>
                {
                    b.HasOne("AirportWebApiBSA.DAL.Models.AirCraftType", "AirCraftType")
                        .WithMany()
                        .HasForeignKey("AirCraftTypeId");
                });

            modelBuilder.Entity("AirportWebApiBSA.DAL.Models.Crew", b =>
                {
                    b.HasOne("AirportWebApiBSA.DAL.Models.Pilot", "Pilot")
                        .WithMany()
                        .HasForeignKey("PilotId");
                });

            modelBuilder.Entity("AirportWebApiBSA.DAL.Models.Departure", b =>
                {
                    b.HasOne("AirportWebApiBSA.DAL.Models.AirCraft", "AirCraft")
                        .WithMany()
                        .HasForeignKey("AirCraftId");

                    b.HasOne("AirportWebApiBSA.DAL.Models.Crew", "Crew")
                        .WithMany()
                        .HasForeignKey("CrewId");
                });

            modelBuilder.Entity("AirportWebApiBSA.DAL.Models.Stewardess", b =>
                {
                    b.HasOne("AirportWebApiBSA.DAL.Models.Crew")
                        .WithMany("Stewardesses")
                        .HasForeignKey("CrewId");
                });

            modelBuilder.Entity("AirportWebApiBSA.DAL.Models.Ticket", b =>
                {
                    b.HasOne("AirportWebApiBSA.DAL.Models.Flight")
                        .WithMany("Tickets")
                        .HasForeignKey("FlightId");
                });
#pragma warning restore 612, 618
        }
    }
}
